package cc.novoline.modules.exploits;

import cc.novoline.events.EventTarget;
import cc.novoline.events.events.PacketDirection;
import cc.novoline.events.events.PacketEvent;
import cc.novoline.gui.screen.setting.Manager;
import cc.novoline.gui.screen.setting.Setting;
import cc.novoline.gui.screen.setting.SettingType;
import cc.novoline.modules.AbstractModule;
import cc.novoline.modules.EnumModuleType;
import cc.novoline.modules.ModuleManager;
import cc.novoline.modules.configurations.annotation.Property;
import cc.novoline.modules.configurations.property.object.BooleanProperty;
import cc.novoline.modules.configurations.property.object.PropertyFactory;
import cc.novoline.modules.player.Freecam;
import java.util.ArrayList;
import java.util.function.Consumer;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.network.play.client.C02PacketUseEntity;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C0APacketAnimation;
import net.minecraft.network.play.server.S08PacketPlayerPosLook;

public final class Blink extends AbstractModule {
   private EntityOtherPlayerMP blinkEntity;
   private final ArrayList packetList = new ArrayList();
   @Property("lagback-check")
   private final BooleanProperty lagback_check = PropertyFactory.booleanFalse();
   private static int z;

   public Blink(ModuleManager var1) {
      super(var1, "Blink", EnumModuleType.EXPLOITS, "there was a cringe description but I removed it -gast");
      Manager.put(new Setting("BLINK_LB", "Lagback check", SettingType.CHECKBOX, this, this.lagback_check));
   }

   public void onEnable() {
      this.checkModule(Freecam.class);
      this.blinkEntity = new EntityOtherPlayerMP(this.mc.world, this.mc.player.getGameProfile());
      this.blinkEntity.copyLocationAndAnglesFrom(this.mc.player);
      this.blinkEntity.setRotationYawHead(this.mc.player.rotationYawHead);
      this.blinkEntity.inventory = this.mc.player.inventory;
      this.mc.world.addEntityToWorld(this.blinkEntity.getEntityID(), this.blinkEntity);
   }

   public void onDisable() {
      a();
      this.mc.world.d(this.blinkEntity.getEntityID());
      if(!this.packetList.isEmpty()) {
         this.packetList.forEach(this::sendPacket);
         this.packetList.clear();
      }

   }

   @EventTarget
   private void onPacketSend(PacketEvent var1) {
      int var2 = a();
      if(var1.getDirection().equals(PacketDirection.OUTGOING)) {
         if(var1.getPacket() instanceof C03PacketPlayer) {
            C03PacketPlayer var3 = (C03PacketPlayer)var1.getPacket();
            if(var3.isMoving()) {
               this.packetList.add(var1.getPacket());
               var1.setCancelled(true);
            }
         }

         if(var1.getPacket() instanceof C0APacketAnimation || var1.getPacket() instanceof C02PacketUseEntity || var1.getPacket() instanceof C08PacketPlayerBlockPlacement) {
            var1.setCancelled(true);
         }
      }

   }

   @EventTarget
   public void onReceive(PacketEvent var1) {
      int var2 = a();
      if(var1.getDirection().equals(PacketDirection.INCOMING) && ((Boolean)this.lagback_check.get()).booleanValue() && var1.getPacket() instanceof S08PacketPlayerPosLook) {
         this.checkModule(this.getClass());
      }

   }

   public EntityOtherPlayerMP getBlinkEntity() {
      return this.blinkEntity;
   }

   public static void b(int var0) {
      z = var0;
   }

   public static int a() {
      return z;
   }

   public static int b() {
      int var0 = a();
      return 105;
   }

   static {
      b(69);
   }
}
